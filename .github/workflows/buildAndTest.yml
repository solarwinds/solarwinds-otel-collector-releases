name: Build and Test Images

on:
  pull_request:
    branches:
      - main
      - 'release/**'
  push:
    branches:
      - main
      - 'release/**'

  workflow_dispatch:
  workflow_call:

env:
  DOCKERHUB_IMAGE: solarwinds/solarwinds-otel-collector
  BUILDER_VERSION: "v0.123.0"

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check licenses
        run: make ci-check-licenses
      - name: Check that the release version is synced across the repo
        run: |
          make prepare-release version=$(grep -oP '(?<=const Version = ")[^"]+' "./pkg/version/version.go")
          git diff --exit-code


  generate_tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.generate-tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate Docker Image Tag
        id: generate-tag
        run: echo "tag=v${{ github.run_number }}-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

  build_and_test_playground:
    runs-on: ubuntu-latest
    needs: generate_tag
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build - Playground Image
        run: >
          docker build . --file build/docker/Dockerfile
          --build-arg BUILD_TAG=playground
          --build-arg BUILDER_VERSION=${{ env.BUILDER_VERSION }}
          --tag solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}-playground
          --tag solarwinds-otel-collector:latest-playground

      - name: E2E Tests
        working-directory: internal/e2e
        run: make e2e-tests tag_arg=latest-playground

      - name: Docker scout image scan
        uses: ./.github/actions/dockerScoutScan
        with:
          username: ${{ vars.ENOPS5919_DOCKER_SCOUT_CI_USER }}
          token: ${{ secrets.ENOPS5919_DOCKER_SCOUT_CI_PAT }}
          current-image: solarwinds-otel-collector
          current-tag: ${{ needs.generate_tag.outputs.tag }}-playground
          compare-to-image: ${{ env.DOCKERHUB_IMAGE }}
          compare-to-tag: latest-playground

  build_and_test_verified:
    runs-on: ubuntu-latest
    needs: generate_tag
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build - Verified Image
        run: >
          docker build . --file build/docker/Dockerfile
          --build-arg BUILD_TAG=verified
          --build-arg BUILDER_VERSION=${{ env.BUILDER_VERSION }}
          --tag solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}-verified
          --tag solarwinds-otel-collector:latest-verified
          --tag solarwinds-otel-collector:latest

      - name: E2E Tests
        working-directory: internal/e2e
        run: make e2e-tests tag_arg=latest-verified

      - name: Docker scout image scan
        uses: ./.github/actions/dockerScoutScan
        with:
          username: ${{ vars.ENOPS5919_DOCKER_SCOUT_CI_USER }}
          token: ${{ secrets.ENOPS5919_DOCKER_SCOUT_CI_PAT }}
          current-image: solarwinds-otel-collector
          current-tag: ${{ needs.generate_tag.outputs.tag }}-verified
          compare-to-image: ${{ env.DOCKERHUB_IMAGE }}
          compare-to-tag: latest-verified

  build_windows_playground:
    runs-on: windows-2022
    # this job takes a long time to run (20 minutes), so run it on main and release branches to have some continuous check that build on windows 
    # still works. Also run it on workflow_dispatch to allow manual runs.
    if: github.event_name == 'workflow_call' || github.event_name == 'workflow_dispatch' || github.event_name == 'push'
    needs: generate_tag
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Playground
        run: >
          docker build . --file build/docker/Dockerfile.Windows-2022
          --build-arg BUILD_TAG=playground
          --build-arg BUILDER_VERSION=${{ env.BUILDER_VERSION }}
          --tag solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2022-playground
          --tag solarwinds-otel-collector:latest-nanoserver-ltsc2022-playground

      - name: CP assets
        run: |
          docker create --name assets solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2022-playground
          docker cp assets:/solarwinds-otel-collector.exe solarwinds-otel-collector.exe

      - name: Build 2019 Playground
        run: >
          docker build . --file build/docker/Dockerfile.Windows-Runtime
          --build-arg WINBASE=mcr.microsoft.com/windows/nanoserver:ltsc2019
          --tag solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2019-playground
          --tag solarwinds-otel-collector:latest-nanoserver-ltsc2019-playground

      - name: Docker scout image scan for Windows 2019
        uses: ./.github/actions/dockerScoutScan
        with:
          username: ${{ vars.ENOPS5919_DOCKER_SCOUT_CI_USER }}
          token: ${{ secrets.ENOPS5919_DOCKER_SCOUT_CI_PAT }}
          current-image: solarwinds-otel-collector
          current-tag: ${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2019-playground
          compare-to-image: ${{ env.DOCKERHUB_IMAGE }}
          compare-to-tag: 'latest-nanoserver-ltsc2019-playground'

      - name: Docker scout image scan for Windows 2022
        uses: ./.github/actions/dockerScoutScan
        with:
          username: ${{ vars.ENOPS5919_DOCKER_SCOUT_CI_USER }}
          token: ${{ secrets.ENOPS5919_DOCKER_SCOUT_CI_PAT }}
          current-image: solarwinds-otel-collector
          current-tag: ${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2022-playground
          compare-to-image: ${{ env.DOCKERHUB_IMAGE }}
          compare-to-tag: 'latest-nanoserver-ltsc2022-playground'

      - name: Save image
        run: |
          docker save --output solarwinds-otel-collector-windows-ltsc2022-playground.tar solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2022-playground
          docker save --output solarwinds-otel-collector-windows-ltsc2019-playground.tar solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2019-playground

      - uses: actions/upload-artifact@v4
        with:
          name: windows-image-playground
          path: |
            solarwinds-otel-collector-windows-ltsc2022-playground.tar
            solarwinds-otel-collector-windows-ltsc2019-playground.tar
          retention-days: 2

  build_windows_verified:
    runs-on: windows-2022
    # this job takes a long time to run (20 minutes), so run it on main and release branches to have some continuous check that build on windows
    # still works. Also run it on workflow_dispatch to allow manual runs.
    if: github.event_name == 'workflow_call' || github.event_name == 'workflow_dispatch' || github.event_name == 'push'
    needs: generate_tag
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Verified
        run: >
          docker build . --file build/docker/Dockerfile.Windows-2022
          --build-arg BUILD_TAG=verified
          --build-arg BUILDER_VERSION=${{ env.BUILDER_VERSION }}
          --tag solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2022-verified
          --tag solarwinds-otel-collector:latest-nanoserver-ltsc2022-verified

      - name: CP assets
        run: |
          docker create --name assets solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2022-verified
          docker cp assets:/solarwinds-otel-collector.exe solarwinds-otel-collector.exe

      - name: Build 2019 Verified
        run: >
          docker build . --file build/docker/Dockerfile.Windows-Runtime
          --build-arg WINBASE=mcr.microsoft.com/windows/nanoserver:ltsc2019
          --tag solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2019-verified
          --tag solarwinds-otel-collector:latest-nanoserver-ltsc2019-verified

      - name: Docker scout image scan for Windows 2019
        uses: ./.github/actions/dockerScoutScan
        with:
          username: ${{ vars.ENOPS5919_DOCKER_SCOUT_CI_USER }}
          token: ${{ secrets.ENOPS5919_DOCKER_SCOUT_CI_PAT }}
          current-image: solarwinds-otel-collector
          current-tag: ${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2019-verified
          compare-to-image: ${{ env.DOCKERHUB_IMAGE }}
          compare-to-tag: 'latest-nanoserver-ltsc2019-verified'

      - name: Docker scout image scan for Windows 2022
        uses: ./.github/actions/dockerScoutScan
        with:
          username: ${{ vars.ENOPS5919_DOCKER_SCOUT_CI_USER }}
          token: ${{ secrets.ENOPS5919_DOCKER_SCOUT_CI_PAT }}
          current-image: solarwinds-otel-collector
          current-tag: ${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2022-verified
          compare-to-image: ${{ env.DOCKERHUB_IMAGE }}
          compare-to-tag: 'latest-nanoserver-ltsc2022-verified'

      - name: Save image
        run: |
          docker save --output solarwinds-otel-collector-windows-ltsc2022-verified.tar solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2022-verified
          docker save --output solarwinds-otel-collector-windows-ltsc2019-verified.tar solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2019-verified

      - uses: actions/upload-artifact@v4
        with:
          name: windows-image-verified
          path: |
            solarwinds-otel-collector-windows-ltsc2022-verified.tar
            solarwinds-otel-collector-windows-ltsc2019-verified.tar
          retention-days: 2
 
  build_k8s:
    runs-on: ubuntu-latest
    needs: generate_tag
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build - k8s Image
        run: >
          docker build . --file build/docker/Dockerfile.k8s
          --tag solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}-k8s
          --tag solarwinds-otel-collector:latest-k8s

      - name: Docker scout image scan
        uses: ./.github/actions/dockerScoutScan
        with:
          username: ${{ vars.ENOPS5919_DOCKER_SCOUT_CI_USER }}
          token: ${{ secrets.ENOPS5919_DOCKER_SCOUT_CI_PAT }}
          current-image: solarwinds-otel-collector
          current-tag: ${{ needs.generate_tag.outputs.tag }}-k8s
          compare-to-image: ${{ env.DOCKERHUB_IMAGE }}
          compare-to-tag: 'latest-k8s'

  build_windows_k8s:
    runs-on: windows-2022
    # this job takes a long time to run (10 minutes), so run it on main and release branches to have some continuous check that build on windows
    # still works. Also run it on workflow_dispatch to allow manual runs.
    if: github.event_name == 'workflow_call' || github.event_name == 'workflow_dispatch' || github.event_name == 'push'
    needs: generate_tag
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build K8s
        run: >
          docker build . --file build/docker/Dockerfile.k8s.Windows-2022
          --tag solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2022-k8s
          --tag solarwinds-otel-collector:latest-nanoserver-ltsc2022-k8s

      - name: CP assets
        run: |
          docker create --name assets-k8s solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2022-k8s
          docker cp assets-k8s:/solarwinds-otel-collector.exe solarwinds-otel-collector.exe
          docker cp assets-k8s:/connection-check.exe connection-check.exe

      - name: Build 2019 K8s
        run: >
          docker build . --file build/docker/Dockerfile.k8s.Windows-Runtime
          --build-arg WINBASE=mcr.microsoft.com/windows/nanoserver:ltsc2019
          --tag solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2019-k8s
          --tag solarwinds-otel-collector:latest-nanoserver-ltsc2019-k8s

      - name: Docker scout image scan for Windows 2019
        uses: ./.github/actions/dockerScoutScan
        with:
          username: ${{ vars.ENOPS5919_DOCKER_SCOUT_CI_USER }}
          token: ${{ secrets.ENOPS5919_DOCKER_SCOUT_CI_PAT }}
          current-image: solarwinds-otel-collector
          current-tag: ${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2019-k8s
          compare-to-image: ${{ env.DOCKERHUB_IMAGE }}
          compare-to-tag: 'latest-nanoserver-ltsc2019-k8s'

      - name: Docker scout image scan for Windows 2022
        uses: ./.github/actions/dockerScoutScan
        with:
          username: ${{ vars.ENOPS5919_DOCKER_SCOUT_CI_USER }}
          token: ${{ secrets.ENOPS5919_DOCKER_SCOUT_CI_PAT }}
          current-image: solarwinds-otel-collector
          current-tag: ${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2022-k8s
          compare-to-image: ${{ env.DOCKERHUB_IMAGE }}
          compare-to-tag: 'latest-nanoserver-ltsc2022-k8s'
            
      - name: Save image
        run: |
          docker save --output solarwinds-otel-collector-windows-k8s-ltsc2022.tar solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2022-k8s
          docker save --output solarwinds-otel-collector-windows-k8s-ltsc2019.tar solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2019-k8s
      
      - uses: actions/upload-artifact@v4
        with:
          name: windows-image-k8s
          path: |
            solarwinds-otel-collector-windows-k8s-ltsc2022.tar
            solarwinds-otel-collector-windows-k8s-ltsc2019.tar
          retention-days: 2

  write_docker_scout_info_comment:
    runs-on: ubuntu-latest
    needs: ['build_and_test_verified', 'build_and_test_playground', 'build_k8s']
    if: |
      !contains(needs.*.result, 'failure') &&
      github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Write Docker Scout Info Comment
        uses: ./.github/actions/dockerScoutComment
