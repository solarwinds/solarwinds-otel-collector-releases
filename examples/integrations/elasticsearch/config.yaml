receivers:
  elasticsearch:
    endpoint: # Required parameter
    collection_interval:  # Required parameter
    # username: # Optional secret
    # password: # Optional secret
    metrics:
      elasticsearch.breaker.memory.estimated:
        enabled: true
      elasticsearch.breaker.memory.limit:
        enabled: true
      elasticsearch.breaker.tripped:
        enabled: true
      elasticsearch.cluster.data_nodes:
        enabled: true
      elasticsearch.cluster.health:
        enabled: true
      elasticsearch.cluster.in_flight_fetch:
        enabled: true
      elasticsearch.cluster.nodes:
        enabled: true
      elasticsearch.cluster.pending_tasks:
        enabled: true
      elasticsearch.cluster.published_states.differences:
        enabled: true
      elasticsearch.cluster.published_states.full:
        enabled: true
      elasticsearch.cluster.shards:
        enabled: true
      elasticsearch.cluster.state_queue:
        enabled: true
      elasticsearch.cluster.state_update.count:
        enabled: true
      elasticsearch.cluster.state_update.time:
        enabled: true
      elasticsearch.index.operations.completed:
        enabled: true
      elasticsearch.index.operations.time:
        enabled: true
      elasticsearch.index.shards.size:
        enabled: true
      elasticsearch.indexing_pressure.memory.limit:
        enabled: true
      elasticsearch.indexing_pressure.memory.total.primary_rejections:
        enabled: true
      elasticsearch.indexing_pressure.memory.total.replica_rejections:
        enabled: true
      elasticsearch.memory.indexing_pressure:
        enabled: true
      elasticsearch.node.cache.count:
        enabled: true
      elasticsearch.node.cache.evictions:
        enabled: true
      elasticsearch.node.cache.memory.usage:
        enabled: true
      elasticsearch.node.cluster.connections:
        enabled: true
      elasticsearch.node.cluster.io:
        enabled: true
      elasticsearch.node.disk.io.read:
        enabled: true
      elasticsearch.node.disk.io.write:
        enabled: true
      elasticsearch.node.documents:
        enabled: true
      elasticsearch.node.fs.disk.available:
        enabled: true
      elasticsearch.node.fs.disk.free:
        enabled: true
      elasticsearch.node.fs.disk.total:
        enabled: true
      elasticsearch.node.http.connections:
        enabled: true
      elasticsearch.node.ingest.documents:
        enabled: true
      elasticsearch.node.ingest.documents.current:
        enabled: true
      elasticsearch.node.ingest.operations.failed:
        enabled: true
      elasticsearch.node.open_files:
        enabled: true
      elasticsearch.node.operations.completed:
        enabled: true
      elasticsearch.node.operations.time:
        enabled: true
      elasticsearch.node.pipeline.ingest.documents.current:
        enabled: true
      elasticsearch.node.pipeline.ingest.documents.preprocessed:
        enabled: true
      elasticsearch.node.pipeline.ingest.operations.failed:
        enabled: true
      elasticsearch.node.script.cache_evictions:
        enabled: true
      elasticsearch.node.script.compilation_limit_triggered:
        enabled: true
      elasticsearch.node.script.compilations:
        enabled: true
      elasticsearch.node.shards.data_set.size:
        enabled: true
      elasticsearch.node.shards.reserved.size:
        enabled: true
      elasticsearch.node.shards.size:
        enabled: true
      elasticsearch.node.thread_pool.tasks.finished:
        enabled: true
      elasticsearch.node.thread_pool.tasks.queued:
        enabled: true
      elasticsearch.node.thread_pool.threads:
        enabled: true
      elasticsearch.node.translog.operations:
        enabled: true
      elasticsearch.node.translog.size:
        enabled: true
      elasticsearch.node.translog.uncommitted.size:
        enabled: true
      elasticsearch.os.cpu.load_avg.15m:
        enabled: true
      elasticsearch.os.cpu.load_avg.1m:
        enabled: true
      elasticsearch.os.cpu.load_avg.5m:
        enabled: true
      elasticsearch.os.cpu.usage:
        enabled: true
      elasticsearch.os.memory:
        enabled: true
      elasticsearch.index.segments.count:
        enabled: true
      elasticsearch.index.documents:
        enabled: true
      elasticsearch.index.operations.merge.current:
        enabled: true
      jvm.classes.loaded:
        enabled: true
      jvm.gc.collections.count:
        enabled: true
      jvm.gc.collections.elapsed:
        enabled: true
      jvm.memory.heap.committed:
        enabled: true
      jvm.memory.heap.max:
        enabled: true
      jvm.memory.heap.used:
        enabled: true
      jvm.memory.nonheap.committed:
        enabled: true
      jvm.memory.nonheap.used:
        enabled: true
      jvm.memory.pool.max:
        enabled: true
      jvm.memory.pool.used:
        enabled: true
      jvm.threads.count:
        enabled: true
  # Optional receiver
  # filelog:
  #   include: # Required parameter
  #   start_at: end
  #   poll_interval: 5s

processors:
  memory_limiter:
    check_interval: 1s
    limit_percentage: 50
    spike_limit_percentage: 30
  resource/elasticsearch:
    attributes:
      - key: sw.otelcol.receiver.name
        value: "elasticsearch"
        action: insert
      - key: sw.otelcol.integration.id
        value: # Required parameter
        action: insert
  resourcedetection/ec2:
    detectors: ["ec2"]
    timeout: 2s
    override: true
  resourcedetection/azure:
    detectors: ["azure"]
    timeout: 2s
    override: true
  resourcedetection/gcp:
    detectors: ["gcp"]
    timeout: 2s
    override: true
  resourcedetection/system:
    detectors: ["system"]
    timeout: 2s
    override: false
    system:
      hostname_sources: ["os"]
  metricstransform/elasticsearch:
    transforms:
      - include: jvm.gc.collections.count
        action: insert
        new_name: jvm.gc.collections.count.rate
      - include: elasticsearch.node.operations.completed
        action: insert
        new_name: elasticsearch.node.operations.completed.rate
      - include: elasticsearch.node.cluster.io
        action: insert
        new_name: elasticsearch.node.cluster.io.rate
  cumulativetodelta/elasticsearch:
    include:
      metrics:
        - jvm.gc.collections.count.rate
        - elasticsearch.node.operations.completed.rate
        - elasticsearch.node.cluster.io.rate
      match_type: strict
  deltatorate/elasticsearch:
    metrics:
      - jvm.gc.collections.count.rate
      - elasticsearch.node.operations.completed.rate
      - elasticsearch.node.cluster.io.rate
  transform/desc/elasticsearch:
    metric_statements:
      - context: metric
        statements:
          - set(description, "The number of Java Virtual Machine garbage collections that have occurred per second.") where name == "jvm.gc.collections.count.rate"
          - set(unit, "collections per second") where name == "jvm.gc.collections.count.rate"
          - set(description, "The number of operations completed for an index per second.") where name == "elasticsearch.node.operations.completed.rate"
          - set(unit, "{operations} per second") where name == "elasticsearch.node.operations.completed.rate"
          - set(description, "The number of bytes sent and received for internal cluster communication per second.") where name == "elasticsearch.node.cluster.io.rate"
          - set(unit, "By per second") where name == "elasticsearch.node.cluster.io.rate"

  batch:
    send_batch_max_size: 20000

extensions:
  solarwinds:
    token: # Required parameter
    collector_name: # Required parameter
    data_center: # Required parameter

exporters:
  solarwinds:

service:
  extensions:
    - solarwinds
  pipelines:
    metrics/elasticsearch:
      receivers:
        - elasticsearch
      processors:
        - memory_limiter
        - resource/elasticsearch
        - resourcedetection/ec2
        - resourcedetection/azure
        - resourcedetection/gcp
        - resourcedetection/system
        - metricstransform/elasticsearch
        - cumulativetodelta/elasticsearch
        - deltatorate/elasticsearch
        - transform/desc/elasticsearch
        - batch
      exporters:
        - solarwinds

    # Optional pipeline
    # logs/elasticsearch:
    #   receivers:
    #     - filelog
    #   processors:
    #     - memory_limiter
    #     - resource/elasticsearch
    #     - resourcedetection/ec2
    #     - resourcedetection/azure
    #     - resourcedetection/gcp
    #     - resourcedetection/system
    #     - batch
    #   exporters:
    #     - solarwinds
