name: Build and Test Images

on:
  pull_request:
    branches:
      - main
      - 'release/**'
  push:
    branches:
      - main
      - 'release/**'

  workflow_dispatch:
  workflow_call:

env:
  DOCKERHUB_IMAGE: solarwinds/solarwinds-otel-collector

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check licenses
        run: make ci-check-licenses
      - name: Check that the release version is synced across the repo
        run: |
          make prepare-release version=$(grep -oP '(?<=const Version = ")[^"]+' "./pkg/version/version.go")
          git diff --exit-code


  generate_tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.generate-tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate Docker Image Tag
        id: generate-tag
        run: echo "tag=v${{ github.run_number }}-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

  build_and_test:
    runs-on: ubuntu-latest
    needs: generate_tag
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build and Test - Full Image
        run: >
          docker build . --file build/docker/Dockerfile
          --tag solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}
          --tag solarwinds-otel-collector:latest

      - name: E2E Tests
        working-directory: internal/e2e
        run: make e2e-tests

      - name: Docker scout image scan
        uses: ./.github/actions/dockerScoutScan
        with:
          username: ${{ vars.ENOPS5919_DOCKER_SCOUT_CI_USER }}
          token: ${{ secrets.ENOPS5919_DOCKER_SCOUT_CI_PAT }}
          current-image: solarwinds-otel-collector
          current-tag: ${{ needs.generate_tag.outputs.tag }}
          compare-to-image: ${{ env.DOCKERHUB_IMAGE }}
          compare-to-tag: latest

  build_windows:
    runs-on: windows-2022
    # this job takes a long time to run (20 minutes), so run it on main and release branches to have some continuous check that build on windows 
    # still works. Also run it on workflow_dispatch to allow manual runs.
    if: github.event_name == 'workflow_call' || github.event_name == 'workflow_dispatch' || github.event_name == 'push'
    needs: generate_tag
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Full
        run: >
          docker build . --file build/docker/Dockerfile.Windows-2022
          --tag solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2022 

      - name: CP assets
        run: |
          docker create --name assets solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2022
          docker cp assets:/solarwinds-otel-collector.exe solarwinds-otel-collector.exe

      - name: Build 2019 Full
        run: >
          docker build . --file build/docker/Dockerfile.Windows-Runtime
          --build-arg WINBASE=mcr.microsoft.com/windows/nanoserver:ltsc2019
          --tag solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2019

      - name: Docker scout image scan for Windows 2019
        uses: ./.github/actions/dockerScoutScan
        with:
          username: ${{ vars.ENOPS5919_DOCKER_SCOUT_CI_USER }}
          token: ${{ secrets.ENOPS5919_DOCKER_SCOUT_CI_PAT }}
          current-image: solarwinds-otel-collector
          current-tag: ${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2019
          compare-to-image: ${{ env.DOCKERHUB_IMAGE }}
          compare-to-regex: '^[0-9]+\.[0-9]+\.[0-9]+-nanoserver-ltsc2019$'

      - name: Docker scout image scan for Windows 2022
        uses: ./.github/actions/dockerScoutScan
        with:
          username: ${{ vars.ENOPS5919_DOCKER_SCOUT_CI_USER }}
          token: ${{ secrets.ENOPS5919_DOCKER_SCOUT_CI_PAT }}
          current-image: solarwinds-otel-collector
          current-tag: ${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2022
          compare-to-image: ${{ env.DOCKERHUB_IMAGE }}
          compare-to-regex: '^[0-9]+\.[0-9]+\.[0-9]+-nanoserver-ltsc2022$'

      - name: Save image
        run: |
          docker save --output solarwinds-otel-collector-windows-ltsc2022.tar solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2022
          docker save --output solarwinds-otel-collector-windows-ltsc2019.tar solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2019

      - uses: actions/upload-artifact@v4
        with:
          name: windows-image-full
          path: |
            solarwinds-otel-collector-windows-ltsc2022.tar
            solarwinds-otel-collector-windows-ltsc2019.tar
          retention-days: 2
 
  build_k8s:
    runs-on: ubuntu-latest
    needs: generate_tag
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build - k8s Image
        run: >
          docker build . --file build/docker/Dockerfile.k8s
          --tag solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}-k8s

      - name: Docker scout image scan
        uses: ./.github/actions/dockerScoutScan
        with:
          username: ${{ vars.ENOPS5919_DOCKER_SCOUT_CI_USER }}
          token: ${{ secrets.ENOPS5919_DOCKER_SCOUT_CI_PAT }}
          current-image: solarwinds-otel-collector
          current-tag: ${{ needs.generate_tag.outputs.tag }}-k8s
          compare-to-image: ${{ env.DOCKERHUB_IMAGE }}
          compare-to-regex: '[0-9]+\.[0-9]+\.[0-9]+-k8s$'

  build_windows_k8s:
    runs-on: windows-2022
    # this job takes a long time to run (10 minutes), so run it on main and release branches to have some continuous check that build on windows
    # still works. Also run it on workflow_dispatch to allow manual runs.
    if: github.event_name == 'workflow_call' || github.event_name == 'workflow_dispatch' || github.event_name == 'push'
    needs: generate_tag
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build K8s
        run: |
          docker build -t solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2022-k8s -f build/docker/Dockerfile.k8s.Windows-2022 . 
          
      - name: CP assets
        run: |
          docker create --name assets-k8s solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2022-k8s
          docker cp assets-k8s:/solarwinds-otel-collector.exe solarwinds-otel-collector.exe

      - name: Build 2019 K8s
        run: >
          docker build . --file build/docker/Dockerfile.k8s.Windows-Runtime
          --build-arg WINBASE=mcr.microsoft.com/windows/nanoserver:ltsc2019
          --tag solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2019-k8s

      - name: Docker scout image scan for Windows 2019
        uses: ./.github/actions/dockerScoutScan
        with:
          username: ${{ vars.ENOPS5919_DOCKER_SCOUT_CI_USER }}
          token: ${{ secrets.ENOPS5919_DOCKER_SCOUT_CI_PAT }}
          current-image: solarwinds-otel-collector
          current-tag: ${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2019-k8s
          compare-to-image: ${{ env.DOCKERHUB_IMAGE }}
          compare-to-regex: '^[0-9]+\.[0-9]+\.[0-9]+-nanoserver-ltsc2019-k8s$'

      - name: Docker scout image scan for Windows 2022
        uses: ./.github/actions/dockerScoutScan
        with:
          username: ${{ vars.ENOPS5919_DOCKER_SCOUT_CI_USER }}
          token: ${{ secrets.ENOPS5919_DOCKER_SCOUT_CI_PAT }}
          current-image: solarwinds-otel-collector
          current-tag: ${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2022-k8s
          compare-to-image: ${{ env.DOCKERHUB_IMAGE }}
          compare-to-regex: '^[0-9]+\.[0-9]+\.[0-9]+-nanoserver-ltsc2022-k8s$'
            
      - name: Save image
        run: |
          docker save --output solarwinds-otel-collector-windows-k8s-ltsc2022.tar solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2022-k8s
          docker save --output solarwinds-otel-collector-windows-k8s-ltsc2019.tar solarwinds-otel-collector:${{ needs.generate_tag.outputs.tag }}-nanoserver-ltsc2019-k8s
      
      - uses: actions/upload-artifact@v4
        with:
          name: windows-image-k8s
          path: |
            solarwinds-otel-collector-windows-k8s-ltsc2022.tar
            solarwinds-otel-collector-windows-k8s-ltsc2019.tar
          retention-days: 2

  write_docker_scout_info_comment:
    runs-on: ubuntu-latest
    needs: ['build_and_test', 'build_k8s']
    if: |
      !contains(needs.*.result, 'failure') &&
      github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Write Docker Scout Info Comment
        uses: ./.github/actions/dockerScoutComment
